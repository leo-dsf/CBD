// NMEC: 103360

// 1. Liste todos os documentos da coleção.
db.restaurants.find()
[
  {
    _id: ObjectId("6343db582d6f04e7155e409c"),
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      rua: 'West   57 Street',
      zipcode: '10019'
    },
    localidade: 'Manhattan',
    gastronomia: 'Irish',
    grades: [
      {
        date: ISODate("2014-09-06T00:00:00.000Z"),
        grade: 'A',
        score: 2
      },
      {
        date: ISODate("2013-07-22T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2012-07-31T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2011-12-29T00:00:00.000Z"),
        grade: 'A',
        score: 12
      }
    ],
    nome: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  ...
]

// 2. Apresente os campos restaurant_id, nome, localidade e gastronomia para todos os documentos da coleção.
db.restaurants.find({}, {restaurant_id: 1, nome: 1, localidade: 1 , gastronomia: 1, _id:0})
[
  {
    localidade: 'Manhattan',
    gastronomia: 'Irish',
    nome: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  ...
]

// 3. Apresente os campos restaurant_id, nome, localidade e código postal (zipcode), mas exclua o campo _id de todos os documentos da coleção.
db.restaurants.find({},{restaurant_id: 1, nome: 1, localidade: 1, address: {zipcode: 1}, _id:0})
[
  {
    address: { zipcode: '10019' },
    localidade: 'Manhattan',
    nome: 'Dj Reynolds Pub And Restaurant',
    restaurant_id: '30191841'
  },
  ...
]

// 4. Indique o total de restaurantes localizados no Bronx.
db.restaurants.countDocuments({localidade: "Bronx"})
309

// 5. Apresente os primeiros 15 restaurantes localizados no Bronx, ordenados por ordem crescente de nome.
db.restaurants.find({localidade: "Bronx"}).sort({nome: 1}).limit(15)
[
  {
    _id: ObjectId("6343db582d6f04e7155e4176"),
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      rua: 'Southern Boulevard',
      zipcode: '10460'
    },
    localidade: 'Bronx',
    gastronomia: 'American',
    grades: [
      {
        date: ISODate("2014-05-21T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2013-05-28T00:00:00.000Z"),
        grade: 'A',
        score: 3
      },
      {
        date: ISODate("2012-06-18T00:00:00.000Z"),
        grade: 'A',
        score: 4
      },
      {
        date: ISODate("2011-06-07T00:00:00.000Z"),
        grade: 'A',
        score: 9
      }
    ],
    nome: 'African Market (Baboon Cafe)',
    restaurant_id: '40368026'
  },
  {
    _id: ObjectId("6343db582d6f04e7155e4173"),
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      rua: 'Southern Boulevard',
      zipcode: '10460'
    },
    localidade: 'Bronx',
    gastronomia: 'African',
    grades: [
      {
        date: ISODate("2014-05-21T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2013-06-01T00:00:00.000Z"),
        grade: 'A',
        score: 6
      },
      {
        date: ISODate("2012-06-12T00:00:00.000Z"),
        grade: 'A',
        score: 0
      },
      {
        date: ISODate("2011-06-08T00:00:00.000Z"),
        grade: 'A',
        score: 0
      }
    ],
    nome: 'African Terrace',
    restaurant_id: '40368021'
  },
  ...
]

// 6. Liste todos os restaurantes que tenham pelo menos um score superior a 85.
db.restaurants.find({"grades.score": {$gt: 85}})
[
  {
    _id: ObjectId("6343db582d6f04e7155e41fc"),
    address: {
      building: '65',
      coord: [ -73.9782725, 40.7624022 ],
      rua: 'West   54 Street',
      zipcode: '10019'
    },
    localidade: 'Manhattan',
    gastronomia: 'American',
    grades: [
      {
        date: ISODate("2014-08-22T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2014-03-28T00:00:00.000Z"),
        grade: 'C',
        score: 131
      },
      {
        date: ISODate("2013-09-25T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-04-08T00:00:00.000Z"),
        grade: 'B',
        score: 25
      },
      {
        date: ISODate("2012-10-15T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2011-10-19T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    nome: "Murals On 54/Randolphs'S",
    restaurant_id: '40372466'
  },
  {
    _id: ObjectId("6343db582d6f04e7155e42b1"),
    address: {
      building: '345',
      coord: [ -73.9864626, 40.7266739 ],
      rua: 'East 6 Street',
      zipcode: '10003'
    },
    localidade: 'Manhattan',
    gastronomia: 'Indian',
    grades: [
      {
        date: ISODate("2014-09-15T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2014-01-14T00:00:00.000Z"),
        grade: 'A',
        score: 8
      },
      {
        date: ISODate("2013-05-30T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2013-04-24T00:00:00.000Z"),
        grade: 'P',
        score: 2
      },
      {
        date: ISODate("2012-10-01T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2012-04-06T00:00:00.000Z"),
        grade: 'C',
        score: 92
      },
      {
        date: ISODate("2011-11-03T00:00:00.000Z"),
        grade: 'C',
        score: 41
      }
    ],
    nome: 'Gandhi',
    restaurant_id: '40381295'
  },
  ...
]

// 7. Encontre os restaurantes que obtiveram uma ou mais pontuações (score) entre [80 e 100].
db.restaurants.find({"grades.score": {$gte: 80, $lte: 100}})
[
  ...,
  {
    _id: ObjectId("6343db582d6f04e7155e4b18"),
    address: {
      building: '243',
      coord: [ -73.9889479, 40.7568894 ],
      rua: 'West   42 Street',
      zipcode: '10036'
    },
    localidade: 'Manhattan',
    gastronomia: 'American',
    grades: [
      {
        date: ISODate("2014-10-31T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2014-05-16T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2013-11-19T00:00:00.000Z"),
        grade: 'A',
        score: 5
      },
      {
        date: ISODate("2013-03-25T00:00:00.000Z"),
        grade: 'B',
        score: 19
      },
      {
        date: ISODate("2012-09-05T00:00:00.000Z"),
        grade: 'B',
        score: 26
      },
      {
        date: ISODate("2012-04-10T00:00:00.000Z"),
        grade: 'C',
        score: 49
      },
      {
        date: ISODate("2011-11-21T00:00:00.000Z"),
        grade: 'C',
        score: 80
      }
    ],
    nome: 'B.B. Kings',
    restaurant_id: '40704853'
  },
  {
    _id: ObjectId("6343db582d6f04e7155e4c64"),
    address: {
      building: '',
      coord: [ -74.0163793, 40.7167671 ],
      rua: 'Hudson River',
      zipcode: '10282'
    },
    localidade: 'Manhattan',
    gastronomia: 'American',
    grades: [
      {
        date: ISODate("2014-06-27T00:00:00.000Z"),
        grade: 'C',
        score: 89
      },
      {
        date: ISODate("2013-06-06T00:00:00.000Z"),
        grade: 'A',
        score: 6
      },
      {
        date: ISODate("2012-06-19T00:00:00.000Z"),
        grade: 'A',
        score: 13
      }
    ],
    nome: 'West 79Th Street Boat Basin Cafe',
    restaurant_id: '40756344'
  }
]

// 8. Indique os restaurantes com latitude inferior a -95,7.
db.restaurants.find({"address.coord.1": {$lt: -95.7}})

// 9. Indique os restaurantes que não têm gastronomia "American", tiveram uma (ou mais) pontuação superior a 70 e estão numa latitude inferior a -65.
db.restaurants.find({gastronomia: {$ne: "American"}, "grades.score": {$gt: 70}, "address.coord.1": {$lt: -65}})

// 10. Liste o restaurant_id, o nome, a localidade e gastronomia dos restaurantes cujo nome começam por "Wil".
db.restaurants.find({nome: /^Wil/}, {restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1, _id: 0})
[
  {
    localidade: 'Bronx',
    gastronomia: 'American',
    nome: 'Wild Asia',
    restaurant_id: '40357217'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Delicatessen',
    nome: "Wilken'S Fine Food",
    restaurant_id: '40356483'
  },
  {
    localidade: 'Bronx',
    gastronomia: 'Pizza',
    nome: 'Wilbel Pizza',
    restaurant_id: '40871979'
  }
]


// 11. Liste o nome, a localidade e a gastronomia dos restaurantes que pertencem ao Bronx e cuja gastronomia é do tipo "American" ou "Chinese".
db.restaurants.find({localidade: "Bronx", $or: [{gastronomia: "American"}, {gastronomia: "Chinese"}]}, {nome: 1, localidade: 1, gastronomia: 1, _id: 0})
[
  { localidade: 'Bronx', gastronomia: 'American', nome: 'Wild Asia' },
  { localidade: 'Bronx', gastronomia: 'Chinese', nome: 'Happy Garden' },
  { localidade: 'Bronx', gastronomia: 'Chinese', nome: 'Happy Garden' },
  { localidade: 'Bronx', gastronomia: 'American', nome: 'Manhem Club' },
  {
    localidade: 'Bronx',
    gastronomia: 'American',
    nome: 'The New Starling Athletic Club Of The Bronx'
  },
  {
    localidade: 'Bronx',
    gastronomia: 'American',
    nome: 'Yankee Tavern'
  },
  {
    localidade: 'Bronx',
    gastronomia: 'American',
    nome: 'The Punch Bowl'
  },
  { localidade: 'Bronx', gastronomia: 'American', nome: 'Munchtime' },
  {
    localidade: 'Bronx',
    gastronomia: 'American',
    nome: 'Marina Delray'
  },
  ...
]

// 12. Liste o restaurant_id, o nome, a localidade e a gastronomia dos restaurantes localizados em "Staten Island", "Queens", ou "Brooklyn".
db.restaurants.find({$or: [{localidade: "Staten Island"}, {localidade: "Queens"}, {localidade: "Brooklyn"}]}, {restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1, _id: 0})
[
  {
    localidade: 'Brooklyn',
    gastronomia: 'Hamburgers',
    nome: "Wendy'S",
    restaurant_id: '30112340'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Jewish/Kosher',
    nome: 'Seuda Foods',
    restaurant_id: '40360045'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Chinese',
    nome: 'May May Kitchen',
    restaurant_id: '40358429'
  },
  {
    localidade: 'Queens',
    gastronomia: 'American',
    nome: 'Brunos On The Boulevard',
    restaurant_id: '40356151'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Ice Cream, Gelato, Yogurt, Ices',
    nome: 'Carvel Ice Cream',
    restaurant_id: '40360076'
  },
  {
    localidade: 'Queens',
    gastronomia: 'Ice Cream, Gelato, Yogurt, Ices',
    nome: 'Carvel Ice Cream',
    restaurant_id: '40361322'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Delicatessen',
    nome: 'Nordic Delicacies',
    restaurant_id: '40361390'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'American',
    nome: 'The Movable Feast',
    restaurant_id: '40361606'
  },
  {
    localidade: 'Queens',
    gastronomia: 'Delicatessen',
    nome: "Steve Chu'S Deli & Grocery",
    restaurant_id: '40361998'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'American',
    nome: 'C & C Catering Service',
    restaurant_id: '40357437'
  },
  {
    localidade: 'Queens',
    gastronomia: 'Delicatessen',
    nome: "Sal'S Deli",
    restaurant_id: '40361618'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Hamburgers',
    nome: 'White Castle',
    restaurant_id: '40362344'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'American',
    nome: 'Riviera Caterer',
    restaurant_id: '40356018'
  },
  {
    localidade: 'Queens',
    gastronomia: 'Chinese',
    nome: 'Ho Mei Restaurant',
    restaurant_id: '40362432'
  },
  {
    localidade: 'Staten Island',
    gastronomia: 'Jewish/Kosher',
    nome: 'Kosher Island',
    restaurant_id: '40356442'
  },
  ...
]

// 13. Liste o nome, a localidade, o score e gastronomia dos restaurantes que alcançaram sempre pontuações inferiores ou igual a 3.
db.restaurants.find({"grades.score": {$all: [{"$elementMatch": 3}]}}, {nome: 1, localidade: 1, grades: {score: 1}, gastronomia: 1, _id: 0})

// 14. Liste o nome e as avaliações dos restaurantes que obtiveram uma avaliação com um grade "A", um score 10 na data "2014-08-11T00:00:00Z" (ISODATE).
db.restaurants.find({"grades.grade": "A", "grades.score": 10, "grades.date": ISODate("2014-08-11T00:00:00Z")}, {nome: 1, grades: 1, _id: 0})
[
  {
    grades: [
      {
        date: ISODate("2014-08-11T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2014-03-14T00:00:00.000Z"),
        grade: 'A',
        score: 3
      },
      {
        date: ISODate("2013-01-16T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2012-07-12T00:00:00.000Z"),
        grade: 'A',
        score: 9
      }
    ],
    nome: 'Serendipity 3'
  },
  {
    grades: [
      {
        date: ISODate("2014-08-11T00:00:00.000Z"),
        grade: 'A',
        score: 13
      },
      {
        date: ISODate("2013-07-22T00:00:00.000Z"),
        grade: 'A',
        score: 9
      },
      {
        date: ISODate("2013-03-14T00:00:00.000Z"),
        grade: 'A',
        score: 12
      },
      {
        date: ISODate("2012-07-02T00:00:00.000Z"),
        grade: 'A',
        score: 11
      },
      {
        date: ISODate("2012-02-02T00:00:00.000Z"),
        grade: 'A',
        score: 10
      },
      {
        date: ISODate("2011-08-24T00:00:00.000Z"),
        grade: 'A',
        score: 11
      }
    ],
    nome: "Neary'S Pub"
  },
  ...
]

// 15. Liste o restaurant_id, o nome e os score dos restaurantes nos quais a segunda avaliação foi grade "A" e ocorreu em ISODATE "2014-08-11T00:00:00Z".
db.restaurants.find({"grades.1.grade": "A", "grades.date": ISODate("2014-08-11T00:00:00Z")}, {restaurant_id: 1, nome: 1, grades: {score: 1}, _id:0})
[
  {
    grades: [ { score: 10 }, { score: 3 }, { score: 10 }, { score: 9 } ],
    nome: 'Serendipity 3',
    restaurant_id: '40364863'
  },
  {
    grades: [
      { score: 13 },
      { score: 9 },
      { score: 12 },
      { score: 11 },
      { score: 10 },
      { score: 11 }
    ],
    nome: "Neary'S Pub",
    restaurant_id: '40365871'
  },
  {
    grades: [
      { score: 11 },
      { score: 9 },
      { score: 12 },
      { score: 13 },
      { score: 8 },
      { score: 12 }
    ],
    nome: 'Don Filippo Restaurant',
    restaurant_id: '40372417'
  },
  ...
]

// 16. Liste o restaurant_id, o nome, o endereço (address) e as coordenadas geográficas (coord) dos restaurantes onde o 2º elemento da matriz de coordenadas tem um valor superior a 42 e inferior ou igual a 52.
db.restaurants.find({"address.coord.1": {$gt: 42, $lte: 52}}, {restaurant_id: 1, nome: 1, address: 1, _id: 0})
[
  {
    address: {
      building: '47',
      coord: [ -78.877224, 42.89546199999999 ],
      rua: 'Broadway @ Trinity Pl',
      zipcode: '10006'
    },
    nome: "T.G.I. Friday'S",
    restaurant_id: '40387990'
  },
  {
    address: {
      building: '1',
      coord: [ -0.7119979, 51.6514664 ],
      rua: 'Pennplaza E, Penn Sta',
      zipcode: '10001'
    },
    nome: 'T.G.I. Fridays',
    restaurant_id: '40388936'
  },
  {
    address: {
      building: '3000',
      coord: [ -87.86567699999999, 42.61150920000001 ],
      rua: '47 Avenue',
      zipcode: '11101'
    },
    nome: "Di Luvio'S Deli",
    restaurant_id: '40402284'
  },
  ...
]

// 17. Liste nome, gastronomia e localidade de todos os restaurantes ordenando por ordem crescente da gastronomia e, em segundo, por ordem decrescente de localidade.
db.restaurants.find({}, {nome: 1, gastronomia: 1, localidade: 1, _id: 0}).sort({gastronomia: 1, localidade: -1})
[
  {
    localidade: 'Manhattan',
    gastronomia: 'Afghan',
    nome: 'Afghan Kebab House'
  },
  {
    localidade: 'Manhattan',
    gastronomia: 'Afghan',
    nome: 'Khyber Pass'
  },
  {
    localidade: 'Manhattan',
    gastronomia: 'Afghan',
    nome: 'Afghan Kebab House #1'
  },
  {
    localidade: 'Manhattan',
    gastronomia: 'Afghan',
    nome: 'Ariana Kebab House'
  },
  {
    localidade: 'Queens',
    gastronomia: 'African',
    nome: 'Africana Restaurant'
  },
  ...
]

// 18. Liste nome, localidade, grade e gastronomia de todos os restaurantes localizados em Brooklyn que não incluem gastronomia "American" e obtiveram uma classificação (grade) "A". Deve apresentá-los por ordem decrescente de gastronomia.
db.restaurants.find({localidade: "Brooklyn", gastronomia: {$ne: "American"}, "grades.grade": "A" }, {nome: 1, gastronomia: 1, localidade: 1, _id: 0, "grades.grade": 1}).sort({gastronomia: -1})
[
  {
    localidade: 'Brooklyn',
    gastronomia: 'Vegetarian',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'C' },
      { grade: 'A' }
    ],
    nome: 'Strictly Vegetarian'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Vegetarian',
    grades: [
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'C' }
    ],
    nome: 'Original Vegetarian Restaurant'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Vegetarian',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    nome: 'Bliss Bakery & Cafe'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Turkish',
    grades: [
      { grade: 'A' },
      { grade: 'B' },
      { grade: 'A' },
      { grade: 'A' },
      { grade: 'C' },
      { grade: 'A' },
      { grade: 'A' }
    ],
    nome: 'Sahara Restaurant'
  },
  {
    localidade: 'Brooklyn',
    gastronomia: 'Turkish',
    grades: [ { grade: 'A' }, { grade: 'A' }, { grade: 'A' }, { grade: 'A' } ],
    nome: 'Istanbul Restaurant'
  },
  ...
]

// 19. Conte o total de restaurante existentes em cada localidade.
db.restaurants.aggregate({$group: {_id: "$localidade", count: {$sum: 1}}})
[
  { _id: 'Brooklyn', count: 684 },
  { _id: 'Manhattan', count: 1883 },
  { _id: 'Queens', count: 738 },
  { _id: 'Bronx', count: 309 },
  { _id: 'Staten Island', count: 158 }
]

// 20. Liste todos os restaurantes cuja média dos score é superior a 30.
db.restaurants.aggregate([{$project: {_id: "$nome", avgScore: {$avg: "$grades.score"}}}, {$match: {avgScore: {$gt: 30}}}])
[
  { _id: 'Nanni Restaurant', avgScore: 32.142857142857146 },
  { _id: "Murals On 54/Randolphs'S", avgScore: 33.666666666666664 },
  { _id: 'Victoria Pizza', avgScore: 30.8 },
  { _id: 'Live Bait Bar & Restaurant', avgScore: 32.6 },
  { _id: 'Bella Napoli', avgScore: 38.6 },
  { _id: "Billy'S Sport Bar Restaurant & Lounge", avgScore: 30.6 },
  { _id: 'West 79Th Street Boat Basin Cafe', avgScore: 36 },
  { _id: 'Trinidad Golden Place', avgScore: 30.8 }
]

// 21. Indique os restaurantes que têm gastronomia "Portuguese", o somatório de score é superior a 50 e estão numa latitude inferior a -60.
db.restaurants.aggregate([{$project: {_id: "$nome", sumScore: {$sum: "$grades.score"}, coords: "$address.coord", gastronomia: "Portuguese"}}, {$match: {sumScore: {$gt: 50}, "coords.0": {$lt: -60}}}])
[
  {
    _id: "Wendy'S",
    sumScore: 55,
    coords: [ -73.961704, 40.662942 ],
    gastronomia: 'Portuguese'
  },
  {
    _id: 'Seuda Foods',
    sumScore: 59,
    coords: [ -73.9653967, 40.6064339 ],
    gastronomia: 'Portuguese'
  },
  {
    _id: 'May May Kitchen',
    sumScore: 138,
    coords: [ -73.871194, 40.6730975 ],
    gastronomia: 'Portuguese'
  },
  ...
]

// 22. Apresente o nome e o score dos 3 restaurantes com score médio mais elevado.
db.restaurants.aggregate([{$project: {_id: "$nome", avgScore: {$avg: "$grades.score"}}}, {$sort: {avgScore: -1}}, {$limit: 3}])
[
  { _id: 'Bella Napoli', avgScore: 38.6 },
  { _id: 'West 79Th Street Boat Basin Cafe', avgScore: 36 },
  { _id: "Murals On 54/Randolphs'S", avgScore: 33.666666666666664 }
]

// 23. Apresente o número de gastronomias diferentes na rua "Fifth Avenue".
db.restaurants.aggregate([{$group: {_id: "$address.rua", gastronomias: {$addToSet: "$gastronomia"}}},{$project: {_id: 1,gastronomiasDiferentes: {$size: "$gastronomias"}}}, {$match: {_id: "Fifth Avenue"}}])
[ { _id: 'Fifth Avenue', gastronomiasDiferentes: 4 } ]


// 24. Conte quantos restaurantes existem por rua e ordene por ordem decrescente.
db.restaurants.aggregate([{$group: {_id: "$address.rua", count: {$sum: 1}}}]).sort({count: -1})
[
  { _id: 'Broadway', count: 178 },
  { _id: '3 Avenue', count: 97 },
  { _id: '7 Avenue', count: 71 },
  { _id: '2 Avenue', count: 62 },
  { _id: '5 Avenue', count: 52 },
  { _id: 'Northern Boulevard', count: 49 },
  { _id: 'Lexington Avenue', count: 48 },
  { _id: '8 Avenue', count: 48 },
  { _id: 'Amsterdam Avenue', count: 46 },
  { _id: '1 Avenue', count: 44 },
  { _id: '9 Avenue', count: 40 },
  { _id: 'Madison Avenue', count: 38 },
  { _id: 'Queens Boulevard', count: 35 },
  { _id: 'Roosevelt Avenue', count: 34 },
  { _id: 'Jamaica Avenue', count: 27 },
  { _id: 'Columbus Avenue', count: 24 },
  { _id: 'Third Avenue', count: 23 },
  { _id: 'Nostrand Avenue', count: 22 },
  { _id: 'Myrtle Avenue', count: 22 },
  { _id: 'Court Street', count: 22 }
]

// 25. Liste as 10 primeiras ruas por ordem alfabética e apresente o número de restaurantes existentes em cada rua.
db.restaurants.aggregate([{$group: {_id: "$address.rua", count: {$sum: 1}}}, {$sort: {_id: 1}}, {$limit: 10}])
[
  { _id: '& Grand Central', count: 1 },
  { _id: '- Jfk Airport', count: 1 },
  { _id: '08 Crossisland Pw', count: 1 },
  { _id: '1 Avenue', count: 44 },
  { _id: '10 Avenue', count: 16 },
  { _id: '10 Street', count: 1 },
  { _id: '101 Avenue', count: 4 },
  { _id: '102 Street', count: 1 },
  { _id: '103 Avenue', count: 1 },
  { _id: '103 Street', count: 2 }
]

// 26. Liste as 10 primeiras ruas por ordem alfabética e apresente o número de restaurantes existentes em cada rua, mas apenas as ruas que tenham mais de 100 restaurantes.
db.restaurants.aggregate([{$group: {_id: "$address.rua", count: {$sum: 1}}}, {$sort: {_id: 1}}, {$match: {count: {$gt: 100}}}, {$limit: 10}])
[ { _id: 'Broadway', count: 178 } ]

// 27. Apresente a gastronomia e o número de restaurantes existentes por gastronomia.
db.restaurants.aggregate([{$group: {_id: "$gastronomia", count: {$sum: 1}}}, {$sort: {count: -1}}])
[
  { _id: 'American', count: 1255 },
  { _id: 'Italian', count: 325 },
  { _id: 'Pizza', count: 270 },
  { _id: 'Café/Coffee/Tea', count: 180 },
  { _id: 'Hamburgers', count: 159 },
  { _id: 'Bakery', count: 127 },
  { _id: 'Chinese', count: 115 },
  {
    _id: 'Latin (Cuban, Dominican, Puerto Rican, South & Central American)',
    count: 115
  },
  { _id: 'Pizza/Italian', count: 106 },
  { _id: 'Japanese', count: 80 },
  { _id: 'Irish', count: 79 },
  { _id: 'Delicatessen', count: 78 },
  { _id: 'Caribbean', count: 75 },
  { _id: 'Mexican', count: 73 },
  { _id: 'French', count: 72 },
  { _id: 'Jewish/Kosher', count: 60 },
  { _id: 'Donuts', count: 43 },
  { _id: 'Indian', count: 43 },
  { _id: 'Spanish', count: 42 },
  { _id: 'Seafood', count: 35 }
]

// 28. Apresente o nome e o score dos 3 restaurantes com score médio mais elevado, mas apenas os restaurantes cuja gastronomia seja "American".
db.restaurants.aggregate([{$match: {gastronomia: "American"}}, {$project: {_id: "$nome", avgScore: {$avg: "$grades.score"}}}, {$sort: {avgScore: -1}}, {$limit: 3}])
[
  { _id: 'West 79Th Street Boat Basin Cafe', avgScore: 36 },
  { _id: "Murals On 54/Randolphs'S", avgScore: 33.666666666666664 },
  { _id: 'Live Bait Bar & Restaurant', avgScore: 32.6 }
]

// 29. Apresente a gastronomia e o número de restaurantes existentes por gastronomia, mas apenas as gastronomias que tenham mais de 100 restaurantes.
db.restaurants.aggregate([{$group: {_id: "$gastronomia", count: {$sum: 1}}}, {$sort: {count: -1}}, {$match: {count: {$gt: 100}}}, {$limit: 10}])
[
  { _id: 'American', count: 1255 },
  { _id: 'Italian', count: 325 },
  { _id: 'Pizza', count: 270 },
  { _id: 'Café/Coffee/Tea', count: 180 },
  { _id: 'Hamburgers', count: 159 },
  { _id: 'Bakery', count: 127 },
  { _id: 'Chinese', count: 115 },
  {
    _id: 'Latin (Cuban, Dominican, Puerto Rican, South & Central American)',
    count: 115
  },
  { _id: 'Pizza/Italian', count: 106 }
]

// 30. Liste o nome e o score dos restaurantes que tenham pelo menos um score menor que 10.
db.restaurants.aggregate([{$match: {"grades.score": {$lt: 10}}}, {$project: {_id: "$nome", score: "$grades.score"}}])
[
  { _id: 'Dj Reynolds Pub And Restaurant', score: [ 2, 11, 12, 12 ] },
  { _id: 'Morris Park Bake Shop', score: [ 2, 6, 10, 9, 14 ] },
  { _id: "Wendy'S", score: [ 8, 23, 12, 12 ] },
  { _id: 'Seuda Foods', score: [ 11, 13, 7, 9, 19 ] },
  { _id: '1 East 66Th Street Kitchen', score: [ 3, 4, 6, 0 ] },
  { _id: 'May May Kitchen', score: [ 21, 7, 56, 27, 27 ] },
  { _id: 'Brunos On The Boulevard', score: [ 38, 10, 7, 13 ] },
  { _id: 'Carvel Ice Cream', score: [ 2, 13, 3, 12, 13 ] },
  { _id: 'Carvel Ice Cream', score: [ 9, 10, 13 ] },
  { _id: 'Nordic Delicacies', score: [ 4, 3, 10 ] },
  { _id: 'The Movable Feast', score: [ 11, 2, 13, 11 ] },
  { _id: 'Glorious Food', score: [ 12, 16, 9, 13, 11 ] },
  { _id: "Steve Chu'S Deli & Grocery", score: [ 3, 12, 8, 7 ] },
  { _id: 'C & C Catering Service', score: [ 5, 2, 5, 2 ] },
  { _id: "Sal'S Deli", score: [ 12, 9, 7, 10 ] },
  { _id: "Bully'S Deli", score: [ 12, 11, 6, 8 ] },
  { _id: 'P & S Deli Grocery', score: [ 26, 9, 20, 12 ] },
  { _id: "Harriet'S Kitchen", score: [ 10, 13, 13, 11, 10, 7 ] },
  { _id: 'White Castle', score: [ 8, 8, 7, 2 ] },
  { _id: 'Angelika Film Center', score: [ 9, 4, 13, 5 ] }
]
