// Estrutura do dataset
[
  {
    _id: 28,
    title: 'Hibernate Search in Action',
    isbn: '1933988649',
    pageCount: 488,
    publishedDate: ISODate("2008-12-21T08:00:00.000Z"),
    thumbnailUrl: 'https://s3.amazonaws.com/AKIAJC5RLADLUMVRPFDQ.book-thumb-images/bernard.jpg',
    shortDescription: '"A great resource for true database independent full text search." --Aaron Walker, base2Services',
    longDescription: "Good search capability is one of the primary demands of a business application. Engines like Lucene provide a great starting point, but with complex applications it can be tricky to implement. It's tough to keep the index up to date, deal with the mismatch between the index structure and the domain model, handle querying conflicts, and so on.    Hibernate Search is an enterprise search tool based on Hibernate Core and Apache Lucene. It provides full text search capabilities for Hibernate-based applications without the infrastructural code required by other search engines. With this free, open-source technology, you can quickly add high-powered search features in an intelligent, maintainable way.    Hibernate Search in Action is a practical, example-oriented guide for Java developers with some background in Hibernate Core. As the first book to cover Hibernate Search, it guides you through every step to set up full text search functionality in your Java applications. The book also introduces core search techniques and reviews the relevant parts of Lucene, in particular the query capabilities.    Hibernate Search in Action also provides a pragmatic, how-to exploration of more advanced topics such as Search clustering. For anyone using Hibernate or JBoss Seam, this book is the definitive guide on how to add or enhance search features in their applications.",
    status: 'PUBLISH',
    authors: [ 'Emmanuel Bernard', 'John Griffin' ],
    categories: [ 'Java' ]
  }
]

Nota: Alguns documentos não têm shortDescription ou longDescription.

// 1. Apresente apenas o nome e a categoria dos livros.
db.books.find({}, {title: 1, categories: 1, _id: 0})
[
  {
    title: 'Specification by Example',
    categories: [ 'Software Engineering' ]
  },
  { title: 'Coffeehouse', categories: [ 'Miscellaneous' ] },
  {
    title: 'Unlocking Android',
    categories: [ 'Open Source', 'Mobile' ]
  },
  {
    title: 'Collective Intelligence in Action',
    categories: [ 'Internet' ]
  },
  {
    title: 'MongoDB in Action',
    categories: [ 'Next Generation Databases' ]
  },
  {
    title: 'Brownfield Application Development in .NET',
    categories: [ 'Microsoft' ]
  },
  {
    title: 'Team Foundation Server 2008 in Action',
    categories: [ 'Microsoft .NET' ]
  },
  ...
]

// 2. Apresente apenas o nome e a categoria dos livros que contenham a categoria Java.
db.books.find({categories: "Java"}, {title: 1, categories: 1, _id: 0})
[
  {
    title: 'Android in Action, Second Edition',
    categories: [ 'Java' ]
  },
  {
    title: '3D User Interfaces with Java 3D',
    categories: [ 'Java', 'Computer Graphics' ]
  },
  {
    title: 'Hibernate in Action (Chinese Edition)',
    categories: [ 'Java' ]
  },
  ...
]

// 3. Apresente o nome e o número de páginas dos 3 livros com o maior número de páginas.
db.books.find({}, {title: 1, pageCount: 1, _id: 0}).sort({pageCount: -1}).limit(3)
[
  {
    title: 'Essential Guide to Peoplesoft Development and Customization',
    pageCount: 1101
  },
  { title: 'Ten Years of UserFriendly.Org', pageCount: 1096 },
  { title: 'Java Foundation Classes', pageCount: 1088 }
]

// 4. Apresente o nome e o número de páginas dos 3 livros com o menor número de páginas.
db.books.find({}, {title: 1, pageCount: 1, _id: 0}).sort({pageCount: 1}).limit(3)
[
  { title: 'SOA Governance in Action', pageCount: 0 },
  { title: 'Specification by Example', pageCount: 0 },
  { title: 'MongoDB in Action', pageCount: 0 }
]

// 5. Apresente o nome e o número de páginas dos 3 livros com o maior número de páginas que contenham a categoria Java.
db.books.find({categories: "Java"}, {title: 1, pageCount: 1, _id: 0}).sort({pageCount: -1}).limit(3)
[
  { title: 'Java Foundation Classes', pageCount: 1088 },
  { title: 'Swing Second Edition', pageCount: 912 },
  { title: 'Java Persistence with Hibernate', pageCount: 880 }
]

// 6. Apresente o title, o pageCount, os authors e as categorias dos livros cujo nome do autor começa por "S".
db.books.find({authors: /^S/}, {title:1, pageCount: 1, authors: 1, categories: 1})
[
  {
    _id: 6,
    title: 'Collective Intelligence in Action',
    pageCount: 425,
    authors: [ 'Satnam Alag' ],
    categories: [ 'Internet' ]
  },
  {
    _id: 25,
    title: 'JSTL in Action',
    pageCount: 480,
    authors: [ 'Shawn Bayern' ],
    categories: [ 'Internet' ]
  },
  {
    _id: 7,
    title: 'Zend Framework in Action',
    pageCount: 432,
    authors: [ 'Rob Allen', 'Nick Lo', 'Steven Brown' ],
    categories: [ 'Web Development' ]
  },
  ...
]

// 7. Conte quantos books existem por categories e ordene por ordem decrescente.
db.books.aggregate([{$group: {_id: "$categories", count: {$sum: 1}}}]).sort({count: -1})
[
  { _id: [], count: 160 },
  { _id: [ 'Java' ], count: 76 },
  { _id: [ 'Microsoft .NET' ], count: 33 },
  { _id: [ 'Internet' ], count: 21 },
  { _id: [ 'Web Development' ], count: 17 },
  { _id: [ 'Software Engineering' ], count: 12 },
  { _id: [ 'Programming' ], count: 11 },
  { _id: [ 'Java', 'Internet' ], count: 9 },
  { _id: [ 'Microsoft' ], count: 7 },
  { _id: [ 'Business' ], count: 6 },
  { _id: [ 'PowerBuilder' ], count: 6 },
  { _id: [ 'Mobile Technology' ], count: 6 },
  { _id: [ 'Python' ], count: 5 },
  { _id: [ 'Computer Graphics' ], count: 4 },
  { _id: [ 'Perl' ], count: 4 },
  { _id: [ 'Client-Server', 'Networking' ], count: 3 },
  { _id: [ 'Business', 'Client-Server' ], count: 3 },
  { _id: [ 'XML', 'Internet' ], count: 2 },
  { _id: [ 'Theory' ], count: 2 },
  { _id: [ 'Object-Oriented Programming' ], count: 2 }
]

// 8. Liste as 10 primeiras categories por ordem alfabética e apresente o número de books existentes em cada categories.
db.books.aggregate([{$group: {_id: "$categories", count: {$sum: 1}}}, {$sort: {_id: 1}}, {$limit: 10}])
[
  { _id: [], count: 160 },
  { _id: [ 'Algorithmic Art' ], count: 1 },
  { _id: [ 'Business' ], count: 6 },
  { _id: [ 'Business', 'Client-Server' ], count: 3 },
  { _id: [ 'Business', 'Software Engineering' ], count: 1 },
  { _id: [ 'Client-Server' ], count: 2 },
  { _id: [ 'Client-Server', 'Networking' ], count: 3 },
  { _id: [ 'Computer Graphics' ], count: 4 },
  { _id: [ 'Computer Graphics', 'Perl' ], count: 1 },
  { _id: [ 'In Action' ], count: 1 }
]

// 9. Liste as 10 primeiras categories por ordem alfabética e apresente o número de books existentes em cada categories, mas apenas as categories que tenham mais de 20 books.
db.books.aggregate([{$group: {_id: "$categories", count: {$sum: 1}}}, {$sort: {_id: 1}}, {$match: {count: {$gt: 20}}}, {$limit: 10}])
[
  { _id: [], count: 160 },
  { _id: [ 'Internet' ], count: 21 },
  { _id: [ 'Java' ], count: 76 },
  { _id: [ 'Microsoft .NET' ], count: 33 }
]

// 10. Liste o title e as pageCount dos books que tenham pelo menos pageCount maior que 700.
db.books.aggregate([{$match: {"pageCount": {$gt: 700}}}, {$project: {_id: "$title", pages: "$pageCount"}}])
[
  { _id: 'Java Persistence with Hibernate', pages: 880 },
  {
    _id: 'Essential Guide to Peoplesoft Development and Customization',
    pages: 1101
  },
  { _id: 'Java Foundation Classes', pages: 1088 },
  { _id: 'Java Network Programming, Second Edition', pages: 860 },
  { _id: 'The Awesome Power of Direct3D/DirectX', pages: 840 },
  { _id: 'JavaServer Faces in Action', pages: 744 },
  { _id: 'SQL Server MVP Deep Dives', pages: 848 },
  { _id: 'SQL Server MVP Deep Dives', pages: 848 },
  { _id: 'SQL Server MVP Deep Dives', pages: 848 },
  { _id: 'EJB 3 in Action', pages: 712 },
  { _id: 'Silverlight 5 in Action', pages: 925 },
  { _id: 'JUnit Recipes', pages: 752 },
  { _id: 'Swing Second Edition', pages: 912 },
  { _id: 'Ten Years of UserFriendly.Org', pages: 1096 },
  { _id: 'Spring in Action, Second Edition', pages: 768 },
  { _id: 'SQL Server MVP Deep Dives, Volume 2', pages: 750 },
  { _id: 'Windows Forms Programming with C#', pages: 752 },
  { _id: 'Windows Forms in Action', pages: 950 },
  {
    _id: 'Web Development with JavaServer Pages, Second Edition',
    pages: 800
  },
  { _id: 'Dynamic WAP Application Development', pages: 888 }
]

// 11. Liste o title e as pageCount dos books que tenham pelo menos pageCount maior que 700 e menor que 1000.
db.books.aggregate([{$match: {"pageCount": {$gt: 700, $lt: 1000}}}, {$project: {_id: "$title", pages: "$pageCount"}}])
[
  { _id: 'Java Persistence with Hibernate', pages: 880 },
  { _id: 'Java Network Programming, Second Edition', pages: 860 },
  { _id: 'The Awesome Power of Direct3D/DirectX', pages: 840 },
  { _id: 'JavaServer Faces in Action', pages: 744 },
  { _id: 'SQL Server MVP Deep Dives', pages: 848 },
  { _id: 'SQL Server MVP Deep Dives', pages: 848 },
  { _id: 'SQL Server MVP Deep Dives', pages: 848 },
  { _id: 'EJB 3 in Action', pages: 712 },
  { _id: 'Silverlight 5 in Action', pages: 925 },
  { _id: 'JUnit Recipes', pages: 752 },
  { _id: 'Swing Second Edition', pages: 912 },
  { _id: 'Spring in Action, Second Edition', pages: 768 },
  { _id: 'SQL Server MVP Deep Dives, Volume 2', pages: 750 },
  { _id: 'Windows Forms Programming with C#', pages: 752 },
  { _id: 'Windows Forms in Action', pages: 950 },
  {
    _id: 'Web Development with JavaServer Pages, Second Edition',
    pages: 800
  },
  { _id: 'Dynamic WAP Application Development', pages: 888 }
]

// 12. Liste o title e as pageCount dos books que tenham pelo menos pageCount maior que 700 e menor que 1000 e que tenham sido publicados antes de 2000.
db.books.aggregate([{$match: {"pageCount": {$gt: 700, $lt: 1000}, "publishedDate": {$lt: new Date("2000-01-01")}}}, {$project: {_id: "$title", pages: "$pageCount"}}])
[ { _id: 'Java Network Programming, Second Edition', pages: 860 } ]